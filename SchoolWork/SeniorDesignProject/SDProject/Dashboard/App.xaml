<Application x:Class="Dashboard.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Dashboard"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Textbox Style -->
        <Style x:Key="textboxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="#5A607F"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

        <!--Pathway Expander Button Style-->
        <Style x:Key="pathButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#5A607F"/>
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="SeaGreen"/>
                    <Setter Property="Background" Value="#DEDEDE"/>
                </Trigger>
            </Style.Triggers>

            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>



        <!--Label Style-->
        <Style x:Key="labelStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="#5A607F"/>
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!--Title Style for tabs -->
        <Style x:Key="titleStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#5A607F"/>
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!--Column Header Style-->
        <Style x:Key="colStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontFamily" Value="Poppins" />
            <Setter Property="FontWeight" Value="SemiBold" />


        </Style>


        <!--Password Box Style-->
        <Style x:Key="passwordStyle" TargetType="{x:Type PasswordBox}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

        <!--Button Style-->
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#5A607F"/>
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderBrush" Value="#D7DBEC"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#131523"/>
                    <Setter Property="Background" Value="#DEDEDE"/>
                </Trigger>
            </Style.Triggers>

            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>
        
        <!--Button Style-->
        <Style x:Key="buttonStyle2" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="#5A607F"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button" >
                        <Grid >
                            <Path x:Name="circle" Stretch="Uniform" UseLayoutRounding="False" Fill="White">
                                <Path.Data>
                                    <EllipseGeometry RadiusX="1" RadiusY="1"/>
                                </Path.Data>
                            </Path>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="SeaGreen"/>
                                <Setter TargetName="circle" Property="Fill" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsMouseCaptured" Value="True">
                                <Setter Property="Foreground" Value="#131523"/>
                                <Setter TargetName="circle" Property="Fill" Value="darkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="buttonStyle3" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#5A607F"/>
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderBrush" Value="#5A607F"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                            <Grid>
                                <Rectangle Fill="{TemplateBinding Background}" x:Name="myRect">
                                    <Rectangle.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Color="#80000000" Offset="0.0" />
                                            <!--<GradientStop Color="#E6000000" Offset="0.5" />-->
                                            <GradientStop Color="#80000000" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="OpacityMask" TargetName="myRect">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Color="White" Offset="0.0" />
                                            <!--<GradientStop Color="#E6000000" Offset="0.5" />-->
                                            <GradientStop Color="White" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="datePicker" TargetType="{x:Type DatePicker}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#5A607F"/>
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

        <!--Pipeline container style-->
        <Style x:Key="pipelineContainer" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="White"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

        <!--Search box style-->
        <Style x:Key="searchBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#5A607F"/>

            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderBrush" Value="#D7DBEC"/>
            <Setter Property="Padding" Value="3"/>

            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>

        </Style>

        <!--Combobox (filter) style-->
        <Style x:Key="comboBoxStyle2" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#5A607F"/>
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderBrush" Value="#D7DBEC"/>
            <Setter Property="Padding" Value="3"/>

            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="White"/>
                </Style>

            </Style.Resources>
        </Style>


        <!--Chart colors-->



        <!--Menu Style-->
        <Style x:Key="menuStyle" TargetType="{x:Type Menu}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />

                </Style>
                <Style TargetType="MenuItem">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="FontFamily" Value="Poppins"/>
                    <Setter Property="FontWeight" Value="Light"/>
                    <Setter Property="FontSize" Value="15"/>
                </Style>
            </Style.Resources>
        </Style>


        <FontFamily x:Key="Poppins">pack://application:,,,/Fonts/#Poppins</FontFamily>

        <!-- ListBox Style-->
        <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
            <Setter Property="OverridesDefaultStyle"
                Value="true" />
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border"
                            BorderThickness="1"
                            CornerRadius="2">
                            <Border.Background>
                                <SolidColorBrush Color="white" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="white" />
                            </Border.BorderBrush>
                            <ScrollViewer Margin="0"
                                Focusable="false">
                                <StackPanel Margin="2"
                                IsItemsHost="True" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Scrollbar-->
        <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag"
                                Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
            <Setter Property="Foreground"
            Value="#ADABAB" />
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="Width"
            Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                <!--<Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />-->
                                <Setter Property="Background" TargetName="Thumb" Value="#7A7A7A"/>
                            </Trigger>
                            <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                Value="false">
                                <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation"
                                Value="Horizontal">
                                <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width"
                                Value="Auto" />
                                <Setter Property="Height"
                                Value="8" />
                                <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
